{"ast":null,"code":"var _jsxFileName = \"C:\\\\React-Task-Manager\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport TaskOwner from './TaskOwner/TaskOwner';\nimport Tasks from './Tasks/Tasks';\nimport Attendants from './Attendants/Attendants';\nimport Button from '@material-ui/core/Button';\nimport styled from 'styled-components';\nconst StyledButton = styled.button`\n      background-color: ${props => props.alt ? 'green' : 'red'}\n      color: white;\n      padding: 10px;\n      border-style: none;\n      border-radius: 5px;\n      &:hover {\n        background-color: ${props => props.alt ? 'blue' : 'black'};\n        color: white;\n        cursor: pointer\n      }\n`;\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      task: '',\n      showTask: false\n    };\n\n    this.showTaskHandler = () => {\n      this.setState({\n        showTask: true\n      });\n    };\n\n    this.hideTaskHandler = () => {\n      this.setState({\n        showTask: false\n      });\n    };\n\n    this.nameTaskChangedHandler = event => {\n      this.setState({\n        name: event.target.value\n      });\n    };\n\n    this.TaskChangedHandler = event => {\n      this.setState({\n        task: event.target.value\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 10\n      }\n    }, \"React Task Manager\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.showTaskHandler,\n      style: {\n        textTransform: 'capitalize',\n        margin: '10px'\n      },\n      variant: \"contained\",\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, \"Show TaskOwner\"), /*#__PURE__*/React.createElement(StyledButton, {\n      alt: this.state.showTask,\n      onClick: this.hideTaskHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, \"Attend to Assigned Tasks\"), this.state.showTask ? /*#__PURE__*/React.createElement(TaskOwner, {\n      name: this.state.name,\n      task: this.state.task,\n      changed: this.nameTaskChangedHandler,\n      change: this.TaskChangedHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Tasks, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, \" \", this.state.name, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, \" \", this.state.task, \" \")), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Attendants, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/React-Task-Manager/src/App.js"],"names":["React","Component","TaskOwner","Tasks","Attendants","Button","styled","StyledButton","button","props","alt","App","state","name","task","showTask","showTaskHandler","setState","hideTaskHandler","nameTaskChangedHandler","event","target","value","TaskChangedHandler","render","textTransform","margin"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\nimport TaskOwner from './TaskOwner/TaskOwner';\r\nimport Tasks from './Tasks/Tasks';\r\nimport Attendants from './Attendants/Attendants';\r\nimport Button from '@material-ui/core/Button';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledButton = styled.button `\r\n      background-color: ${props => props.alt ? 'green' : 'red'}\r\n      color: white;\r\n      padding: 10px;\r\n      border-style: none;\r\n      border-radius: 5px;\r\n      &:hover {\r\n        background-color: ${ props => props.alt ? 'blue': 'black' };\r\n        color: white;\r\n        cursor: pointer\r\n      }\r\n`;\r\n\r\nclass App extends Component {\r\n  state = {\r\n    name: '',\r\n    task: '',\r\n    showTask: false\r\n  }\r\n\r\n  showTaskHandler = () => {\r\n    this.setState({\r\n      showTask: true\r\n    })\r\n  }\r\n\r\n  hideTaskHandler = () => {\r\n    this.setState({\r\n      showTask: false\r\n    })\r\n  }\r\n\r\n  nameTaskChangedHandler = (event) => {\r\n    this.setState({\r\n      name: event.target.value\r\n    })\r\n  }\r\n\r\n  TaskChangedHandler = (event) => {\r\n    this.setState({\r\n      task: event.target.value\r\n    })\r\n  }\r\n  render () {\r\n    \r\n    return (\r\n      <div className=\"App\">\r\n         <h1>React Task Manager</h1>\r\n\r\n        <Button \r\n          onClick = {this.showTaskHandler}\r\n          style = {{textTransform: 'capitalize', margin: '10px'}}\r\n          variant = \"contained\"\r\n          color = \"secondary\"\r\n        >Show TaskOwner</Button>\r\n        <StyledButton\r\n          alt = {this.state.showTask}\r\n          onClick = {this.hideTaskHandler}>\r\n          Attend to Assigned Tasks\r\n        </StyledButton>\r\n       \r\n        {\r\n          this.state.showTask ? \r\n            <TaskOwner \r\n              name = {this.state.name}\r\n              task = {this.state.task}\r\n              changed = {this.nameTaskChangedHandler}\r\n              change = {this.TaskChangedHandler}\r\n            />\r\n            :\r\n            <div>\r\n              <Tasks>\r\n                <p> {this.state.name} </p>\r\n                <p> {this.state.task} </p>\r\n              </Tasks>\r\n              <hr />\r\n              <Attendants />\r\n            </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}